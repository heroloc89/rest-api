spring.datasource.url=jdbc:mysql://localhost:3306/demo_db?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate=ERROR
jwt.secret=locpnguyen
jwt.expirationInMs=604800000

spring.cache.type=redis
spring.redis.host=127.0.0.1
spring.redis.port=6379

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
restapi.rabbitmq.exchange=restapi.exchange
restapi.rabbitmq.queue=restapi.queue
restapi.rabbitmq.routingkey=restapi.routingkey
spring.main.allow-bean-definition-overriding=true

spring.security.oauth2.client.registration.google.clientId=680485304822-lgl2urod4moi3tr8vnjci1oej53ae1n1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=k4hjD19RaKSZpRPKu-AxIO5f
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.tokenName=oauth_token
#security.oauth2.client.authenticationScheme=query
#security.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=profile email
#
#security.oauth2.resource.userInfoUri=https://www.googleapis.com/userinfo/v2/me
#security.oauth2.resource.preferTokenInfo=false